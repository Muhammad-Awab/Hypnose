@inject NavigationManager nm

@{
    int choiceIndex = 0;

}
@foreach (var choice in QuestionsChoice[int.Parse(QuestionNo)].Choices)
{  
   
    <input @onchange="@(() => UpdateChoice(choice))"
       type="radio" 
       
       class="form-check-input"
       name="@QuestionNo"
       id="@choiceIndex"
       autocomplete="off"
       value="@choiceIndex"
       checked="@(QuestionNo)"/>
    <label class="form-check-label" for="@choiceIndex">@choice</label>
    <br />
    choiceIndex++;
}

@code {

    [Parameter]
    public List<Hypnos.Data.HypnosQuestion>? QuestionsChoice { get; set; }
    [Parameter]
    public string? QuestionNo { get; set; }

    [Parameter]
    public EventCallback<string> SetChoice { get; set; }

    protected async Task UpdateChoice(string choice)
    {
        await SetChoice.InvokeAsync(choice);
        StateHasChanged();
    }

   
}